#! /usr/bin/env python3
#


__all__ = [
    "HEADER_2_SYMBOLS",
]


HEADER_2_SYMBOLS = {
    "assert.h": [
        "assert",
    ],
    "cassert": [],
    "errno.h": [
        "E2BIG",
        "EACCES",
        "EADDRINUSE",
        "EADDRNOTAVAIL",
        "EAFNOSUPPORT",
        "EAGAIN",
        "EALREADY",
        "EBADF",
        "EBADMSG",
        "EBUSY",
        "ECANCELED",
        "ECHILD",
        "ECONNABORTED",
        "ECONNREFUSED",
        "ECONNRESET",
        "EDEADLK",
        "EDESTADDRREQ",
        "EDOM",
        "EEXIST",
        "EFAULT",
        "EFBIG",
        "EHOSTUNREACH",
        "EIDRM",
        "EILSEQ",
        "EINPROGRESS",
        "EINTR",
        "EINVAL",
        "EIO",
        "EISCONN",
        "EISDIR",
        "ELOOP",
        "EMFILE",
        "EMLINK",
        "EMSGSIZE",
        "ENAMETOOLONG",
        "ENETDOWN",
        "ENETRESET",
        "ENETUNREACH",
        "ENFILE",
        "ENOBUFS",
        "ENODATA",
        "ENODEV",
        "ENOENT",
        "ENOEXEC",
        "ENOLCK",
        "ENOLINK",
        "ENOMEM",
        "ENOMSG",
        "ENOPROTOOPT",
        "ENOSPC",
        "ENOSR",
        "ENOSTR",
        "ENOSYS",
        "ENOTCONN",
        "ENOTDIR",
        "ENOTEMPTY",
        "ENOTRECOVERABLE",
        "ENOTSOCK",
        "ENOTSUP",
        "ENOTTY",
        "ENXIO",
        "EOPNOTSUPP",
        "EOVERFLOW",
        "EOWNERDEAD",
        "EPERM",
        "EPIPE",
        "EPROTO",
        "EPROTONOSUPPORT",
        "EPROTOTYPE",
        "ERANGE",
        "EROFS",
        "ESPIPE",
        "ESRCH",
        "ETIME",
        "ETIMEDOUT",
        "ETXTBSY",
        "EWOULDBLOCK",
        "EXDEV",
        "errno",
    ],
    "cerrno": [],
    "inttypes.h": [
        "PRIX16",
        "PRIX32",
        "PRIX64",
        "PRIX8",
        "PRIXFAST16",
        "PRIXFAST32",
        "PRIXFAST64",
        "PRIXFAST8",
        "PRIXLEAST16",
        "PRIXLEAST32",
        "PRIXLEAST64",
        "PRIXLEAST8",
        "PRIXMAX",
        "PRIXPTR",
        "PRId16",
        "PRId32",
        "PRId64",
        "PRId8",
        "PRIdFAST16",
        "PRIdFAST32",
        "PRIdFAST64",
        "PRIdFAST8",
        "PRIdLEAST16",
        "PRIdLEAST32",
        "PRIdLEAST64",
        "PRIdLEAST8",
        "PRIdMAX",
        "PRIdPTR",
        "PRIi16",
        "PRIi32",
        "PRIi64",
        "PRIi8",
        "PRIiFAST16",
        "PRIiFAST32",
        "PRIiFAST64",
        "PRIiFAST8",
        "PRIiLEAST16",
        "PRIiLEAST32",
        "PRIiLEAST64",
        "PRIiLEAST8",
        "PRIiMAX",
        "PRIiPTR",
        "PRIo16",
        "PRIo32",
        "PRIo64",
        "PRIo8",
        "PRIoFAST16",
        "PRIoFAST32",
        "PRIoFAST64",
        "PRIoFAST8",
        "PRIoLEAST16",
        "PRIoLEAST32",
        "PRIoLEAST64",
        "PRIoLEAST8",
        "PRIoMAX",
        "PRIoPTR",
        "PRIu16",
        "PRIu32",
        "PRIu64",
        "PRIu8",
        "PRIuFAST16",
        "PRIuFAST32",
        "PRIuFAST64",
        "PRIuFAST8",
        "PRIuLEAST16",
        "PRIuLEAST32",
        "PRIuLEAST64",
        "PRIuLEAST8",
        "PRIuMAX",
        "PRIuPTR",
        "PRIx16",
        "PRIx32",
        "PRIx64",
        "PRIx8",
        "PRIxFAST16",
        "PRIxFAST32",
        "PRIxFAST64",
        "PRIxFAST8",
        "PRIxLEAST16",
        "PRIxLEAST32",
        "PRIxLEAST64",
        "PRIxLEAST8",
        "PRIxMAX",
        "PRIxPTR",
        "SCNd16",
        "SCNd32",
        "SCNd64",
        "SCNd8",
        "SCNdFAST16",
        "SCNdFAST32",
        "SCNdFAST64",
        "SCNdFAST8",
        "SCNdLEAST16",
        "SCNdLEAST32",
        "SCNdLEAST64",
        "SCNdLEAST8",
        "SCNdMAX",
        "SCNdPTR",
        "SCNi16",
        "SCNi32",
        "SCNi64",
        "SCNi8",
        "SCNiFAST16",
        "SCNiFAST32",
        "SCNiFAST64",
        "SCNiFAST8",
        "SCNiLEAST16",
        "SCNiLEAST32",
        "SCNiLEAST64",
        "SCNiLEAST8",
        "SCNiMAX",
        "SCNiPTR",
        "SCNo16",
        "SCNo32",
        "SCNo64",
        "SCNo8",
        "SCNoFAST16",
        "SCNoFAST32",
        "SCNoFAST64",
        "SCNoFAST8",
        "SCNoLEAST16",
        "SCNoLEAST32",
        "SCNoLEAST64",
        "SCNoLEAST8",
        "SCNoMAX",
        "SCNoPTR",
        "SCNu16",
        "SCNu32",
        "SCNu64",
        "SCNu8",
        "SCNuFAST16",
        "SCNuFAST32",
        "SCNuFAST64",
        "SCNuFAST8",
        "SCNuLEAST16",
        "SCNuLEAST32",
        "SCNuLEAST64",
        "SCNuLEAST8",
        "SCNuMAX",
        "SCNuPTR",
        "SCNx16",
        "SCNx32",
        "SCNx64",
        "SCNx8",
        "SCNxFAST16",
        "SCNxFAST32",
        "SCNxFAST64",
        "SCNxFAST8",
        "SCNxLEAST16",
        "SCNxLEAST32",
        "SCNxLEAST64",
        "SCNxLEAST8",
        "SCNxMAX",
        "SCNxPTR",
        "imaxabs",
        "imaxdiv",
        "imaxdiv_t",
        "strtoimax",
        "strtoumax",
        "wcstoimax",
        "wcstoumax",
    ],
    "cinttypes": [
        "std::imaxabs",
        "std::imaxdiv",
        "std::imaxdiv_t",
        "std::strtoimax",
        "std::strtoumax",
        "std::wcstoimax",
        "std::wcstoumax",
    ],
    "math.h": [
        "FP_FAST_FMA",
        "FP_FAST_FMAF",
        "FP_FAST_FMAL",
        "FP_ILOGB0",
        "FP_ILOGBNAN",
        "FP_INFINITE",
        "FP_NAN",
        "FP_NORMAL",
        "FP_SUBNORMAL",
        "FP_ZERO",
        "HUGE_VAL",
        "HUGE_VALF",
        "HUGE_VALL",
        "INFINITY",
        "MATH_ERREXCEPT",
        "MATH_ERRNO",
        "NAN",
        "abs",
        "acos",
        "acosf",
        "acosh",
        "acoshf",
        "acoshl",
        "acosl",
        "asin",
        "asinf",
        "asinh",
        "asinhf",
        "asinhl",
        "asinl",
        "atan",
        "atan2",
        "atan2f",
        "atan2l",
        "atanf",
        "atanh",
        "atanhf",
        "atanhl",
        "atanl",
        "cbrt",
        "cbrtf",
        "cbrtl",
        "ceil",
        "ceilf",
        "ceill",
        "copysign",
        "copysignf",
        "copysignl",
        "cos",
        "cosf",
        "cosh",
        "coshf",
        "coshl",
        "cosl",
        "double_t",
        "erf",
        "erfc",
        "erfcf",
        "erfcl",
        "erff",
        "erfl",
        "exp",
        "exp2",
        "exp2f",
        "exp2l",
        "expf",
        "expl",
        "expm1",
        "expm1f",
        "expm1l",
        "fabs",
        "fabsf",
        "fabsl",
        "fdim",
        "fdimf",
        "fdiml",
        "float_t",
        "floor",
        "floorf",
        "floorl",
        "fma",
        "fmaf",
        "fmal",
        "fmax",
        "fmaxf",
        "fmaxl",
        "fmin",
        "fminf",
        "fminl",
        "fmod",
        "fmodf",
        "fmodl",
        "fpclassify",
        "frexp",
        "frexpf",
        "frexpl",
        "hypot",
        "hypot",
        "hypotf",
        "hypotl",
        "ilogb",
        "ilogbf",
        "ilogbl",
        "isfinite",
        "isgreater",
        "isgreaterequal",
        "isinf",
        "isless",
        "islessequal",
        "islessgreater",
        "isnan",
        "isnormal",
        "isunordered",
        "ldexp",
        "ldexpf",
        "ldexpl",
        "lerp",
        "lgamma",
        "lgammaf",
        "lgammal",
        "llrint",
        "llrintf",
        "llrintl",
        "llround",
        "llroundf",
        "llroundl",
        "log",
        "log10",
        "log10f",
        "log10l",
        "log1p",
        "log1pf",
        "log1pl",
        "log2",
        "log2f",
        "log2l",
        "logb",
        "logbf",
        "logbl",
        "logf",
        "logl",
        "lrint",
        "lrintf",
        "lrintl",
        "lround",
        "lroundf",
        "lroundl",
        "math_errhandling",
        "modf",
        "modff",
        "modfl",
        "nan",
        "nanf",
        "nanl",
        "nearbyint",
        "nearbyintf",
        "nearbyintl",
        "nextafter",
        "nextafterf",
        "nextafterl",
        "nexttoward",
        "nexttowardf",
        "nexttowardl",
        "pow",
        "powf",
        "powl",
        "remainder",
        "remainderf",
        "remainderl",
        "remquo",
        "remquof",
        "remquol",
        "rint",
        "rintf",
        "rintl",
        "round",
        "roundf",
        "roundl",
        "scalbln",
        "scalblnf",
        "scalblnl",
        "scalbn",
        "scalbnf",
        "scalbnl",
        "signbit",
        "sin",
        "sinf",
        "sinh",
        "sinhf",
        "sinhl",
        "sinl",
        "sqrt",
        "sqrtf",
        "sqrtl",
        "tan",
        "tanf",
        "tanh",
        "tanhf",
        "tanhl",
        "tanl",
        "tgamma",
        "tgammaf",
        "tgammal",
        "trunc",
        "truncf",
        "truncl",
    ],
    "cmath": [
        "std::abs",
        "std::acos",
        "std::acosf",
        "std::acosh",
        "std::acoshf",
        "std::acoshl",
        "std::acosl",
        "std::asin",
        "std::asinf",
        "std::asinh",
        "std::asinhf",
        "std::asinhl",
        "std::asinl",
        "std::assoc_laguerre",
        "std::assoc_laguerref",
        "std::assoc_laguerrel",
        "std::assoc_legendre",
        "std::assoc_legendref",
        "std::assoc_legendrel",
        "std::atan",
        "std::atan2",
        "std::atan2f",
        "std::atan2l",
        "std::atanf",
        "std::atanh",
        "std::atanhf",
        "std::atanhl",
        "std::atanl",
        "std::beta",
        "std::betaf",
        "std::betal",
        "std::cbrt",
        "std::cbrtf",
        "std::cbrtl",
        "std::ceil",
        "std::ceilf",
        "std::ceill",
        "std::comp_ellint_1",
        "std::comp_ellint_1f",
        "std::comp_ellint_1l",
        "std::comp_ellint_2",
        "std::comp_ellint_2f",
        "std::comp_ellint_2l",
        "std::comp_ellint_3",
        "std::comp_ellint_3f",
        "std::comp_ellint_3l",
        "std::copysign",
        "std::copysignf",
        "std::copysignl",
        "std::cos",
        "std::cosf",
        "std::cosh",
        "std::coshf",
        "std::coshl",
        "std::cosl",
        "std::cyl_bessel_i",
        "std::cyl_bessel_if",
        "std::cyl_bessel_il",
        "std::cyl_bessel_j",
        "std::cyl_bessel_jf",
        "std::cyl_bessel_jl",
        "std::cyl_bessel_k",
        "std::cyl_bessel_kf",
        "std::cyl_bessel_kl",
        "std::cyl_neumann",
        "std::cyl_neumannf",
        "std::cyl_neumannl",
        "std::double_t",
        "std::ellint_1",
        "std::ellint_1f",
        "std::ellint_1l",
        "std::ellint_2",
        "std::ellint_2f",
        "std::ellint_2l",
        "std::ellint_3",
        "std::ellint_3f",
        "std::ellint_3l",
        "std::erf",
        "std::erfc",
        "std::erfcf",
        "std::erfcl",
        "std::erff",
        "std::erfl",
        "std::exp",
        "std::exp2",
        "std::exp2f",
        "std::exp2l",
        "std::expf",
        "std::expint",
        "std::expintf",
        "std::expintl",
        "std::expl",
        "std::expm1",
        "std::expm1f",
        "std::expm1l",
        "std::fabs",
        "std::fabsf",
        "std::fabsl",
        "std::fdim",
        "std::fdimf",
        "std::fdiml",
        "std::float_t",
        "std::floor",
        "std::floorf",
        "std::floorl",
        "std::fma",
        "std::fmaf",
        "std::fmal",
        "std::fmax",
        "std::fmaxf",
        "std::fmaxl",
        "std::fmin",
        "std::fminf",
        "std::fminl",
        "std::fmod",
        "std::fmodf",
        "std::fmodl",
        "std::fpclassify",
        "std::frexp",
        "std::frexpf",
        "std::frexpl",
        "std::hermite",
        "std::hermitef",
        "std::hermitel",
        "std::hypot",
        "std::hypot",
        "std::hypotf",
        "std::hypotl",
        "std::ilogb",
        "std::ilogbf",
        "std::ilogbl",
        "std::isfinite",
        "std::isgreater",
        "std::isgreaterequal",
        "std::isinf",
        "std::isless",
        "std::islessequal",
        "std::islessgreater",
        "std::isnan",
        "std::isnormal",
        "std::isunordered",
        "std::laguerre",
        "std::laguerref",
        "std::laguerrel",
        "std::ldexp",
        "std::ldexpf",
        "std::ldexpl",
        "std::legendre",
        "std::legendref",
        "std::legendrel",
        "std::lerp",
        "std::lgamma",
        "std::lgammaf",
        "std::lgammal",
        "std::llrint",
        "std::llrintf",
        "std::llrintl",
        "std::llround",
        "std::llroundf",
        "std::llroundl",
        "std::log",
        "std::log10",
        "std::log10f",
        "std::log10l",
        "std::log1p",
        "std::log1pf",
        "std::log1pl",
        "std::log2",
        "std::log2f",
        "std::log2l",
        "std::logb",
        "std::logbf",
        "std::logbl",
        "std::logf",
        "std::logl",
        "std::lrint",
        "std::lrintf",
        "std::lrintl",
        "std::lround",
        "std::lroundf",
        "std::lroundl",
        "std::modf",
        "std::modff",
        "std::modfl",
        "std::nan",
        "std::nanf",
        "std::nanl",
        "std::nearbyint",
        "std::nearbyintf",
        "std::nearbyintl",
        "std::nextafter",
        "std::nextafterf",
        "std::nextafterl",
        "std::nexttoward",
        "std::nexttowardf",
        "std::nexttowardl",
        "std::pow",
        "std::powf",
        "std::powl",
        "std::remainder",
        "std::remainderf",
        "std::remainderl",
        "std::remquo",
        "std::remquof",
        "std::remquol",
        "std::riemann_zeta",
        "std::riemann_zetaf",
        "std::riemann_zetal",
        "std::rint",
        "std::rintf",
        "std::rintl",
        "std::round",
        "std::roundf",
        "std::roundl",
        "std::scalbln",
        "std::scalblnf",
        "std::scalblnl",
        "std::scalbn",
        "std::scalbnf",
        "std::scalbnl",
        "std::signbit",
        "std::sin",
        "std::sinf",
        "std::sinh",
        "std::sinhf",
        "std::sinhl",
        "std::sinl",
        "std::sph_bessel",
        "std::sph_besself",
        "std::sph_bessell",
        "std::sph_legendre",
        "std::sph_legendref",
        "std::sph_legendrel",
        "std::sph_neumann",
        "std::sph_neumannf",
        "std::sph_neumannl",
        "std::sqrt",
        "std::sqrtf",
        "std::sqrtl",
        "std::tan",
        "std::tanf",
        "std::tanh",
        "std::tanhf",
        "std::tanhl",
        "std::tanl",
        "std::tgamma",
        "std::tgammaf",
        "std::tgammal",
        "std::trunc",
        "std::truncf",
        "std::truncl",
    ],
    "signal.h": [
        "SIGABRT",
        "SIGFPE",
        "SIGILL",
        "SIGINT",
        "SIGSEGV",
        "SIGTERM",
        "SIG_DFL",
        "SIG_ERR",
        "SIG_IGN",
        "raise",
        "sig_atomic_t",
        "signal",
    ],
    "csignal": [
        "std::sig_atomic_t",
        "std::signal",
        "std::raise",
    ],
    "stdarg.h": [
        "va_arg",
        "va_copy",
        "va_end",
        "va_list",
        "va_start",
    ],
    "cstdarg": [
        "std::va_list",
    ],
    "stddef.h": [
        "NULL",
        "max_align_t",
        "offsetof",
        "ptrdiff_t",
        "size_t",
    ],
    "cstddef": [
        "std::byte",
        "std::max_align_t",
        "std::nullptr_t",
        "std::ptrdiff_t",
        "std::size_t",
    ],
    "stdint.h": [
        "INT16_C",
        "INT16_MAX",
        "INT16_MIN",
        "INT32_C",
        "INT32_MAX",
        "INT32_MIN",
        "INT64_C",
        "INT64_MAX",
        "INT64_MIN",
        "INT8_C",
        "INT8_MAX",
        "INT8_MIN",
        "INTMAX_C",
        "INTMAX_MAX",
        "INTMAX_MIN",
        "INTPTR_MAX",
        "INTPTR_MIN",
        "INT_FAST16_MAX",
        "INT_FAST16_MIN",
        "INT_FAST32_MAX",
        "INT_FAST32_MIN",
        "INT_FAST64_MAX",
        "INT_FAST64_MIN",
        "INT_FAST8_MAX",
        "INT_FAST8_MIN",
        "INT_LEAST16_MAX",
        "INT_LEAST16_MIN",
        "INT_LEAST32_MAX",
        "INT_LEAST32_MIN",
        "INT_LEAST64_MAX",
        "INT_LEAST64_MIN",
        "INT_LEAST8_MAX",
        "INT_LEAST8_MIN",
        "UINT16_C",
        "UINT16_MAX",
        "UINT32_C",
        "UINT32_MAX",
        "UINT64_C",
        "UINT64_MAX",
        "UINT8_C",
        "UINT8_MAX",
        "UINTMAX_C",
        "UINTMAX_MAX",
        "UINTPTR_MAX",
        "UINT_FAST16_MAX",
        "UINT_FAST32_MAX",
        "UINT_FAST64_MAX",
        "UINT_FAST8_MAX",
        "UINT_LEAST16_MAX",
        "UINT_LEAST32_MAX",
        "UINT_LEAST64_MAX",
        "UINT_LEAST8_MAX",
        "int16_t",
        "int32_t",
        "int64_t",
        "int8_t",
        "int_fast16_t",
        "int_fast32_t",
        "int_fast64_t",
        "int_fast8_t",
        "int_least16_t",
        "int_least32_t",
        "int_least64_t",
        "int_least8_t",
        "intmax_t",
        "intptr_t",
        "uint16_t",
        "uint32_t",
        "uint64_t",
        "uint8_t",
        "uint_fast16_t",
        "uint_fast32_t",
        "uint_fast64_t",
        "uint_fast8_t",
        "uint_least16_t",
        "uint_least32_t",
        "uint_least64_t",
        "uint_least8_t",
        "uintmax_t",
        "uintptr_t",
    ],
    "cstdint": [
        "std::int16_t",
        "std::int32_t",
        "std::int64_t",
        "std::int8_t",
        "std::int_fast16_t",
        "std::int_fast32_t",
        "std::int_fast64_t",
        "std::int_fast8_t",
        "std::int_least16_t",
        "std::int_least32_t",
        "std::int_least64_t",
        "std::int_least8_t",
        "std::intmax_t",
        "std::intptr_t",
        "std::uint16_t",
        "std::uint32_t",
        "std::uint64_t",
        "std::uint8_t",
        "std::uint_fast16_t",
        "std::uint_fast32_t",
        "std::uint_fast64_t",
        "std::uint_fast8_t",
        "std::uint_least16_t",
        "std::uint_least32_t",
        "std::uint_least64_t",
        "std::uint_least8_t",
        "std::uintmax_t",
        "std::uintptr_t",
    ],
    "stdio.h": [
        "BUFSIZ",
        "EOF",
        "FILE",
        "FILENAME_MAX",
        "FOPEN_MAX",
        "L_tmpnam",
        "SEEK_CUR",
        "SEEK_END",
        "SEEK_SET",
        "TMP_MAX",
        "_IOFBF",
        "_IOLBF",
        "_IONBF",
        "clearerr",
        "fclose",
        "feof",
        "ferror",
        "fflush",
        "fgetc",
        "fgetpos",
        "fgets",
        "fopen",
        "fpos_t",
        "fprintf",
        "fputc",
        "fputs",
        "fread",
        "freopen",
        "fscanf",
        "fseek",
        "fsetpos",
        "ftell",
        "fwrite",
        "getc",
        "getchar",
        "perror",
        "printf",
        "putc",
        "putchar",
        "puts",
        "remove",
        "rename",
        "rewind",
        "scanf",
        "setbuf",
        "setvbuf",
        "snprintf",
        "sprintf",
        "sscanf",
        "stderr",
        "stdin",
        "stdout",
        "tmpfile",
        "tmpnam",
        "ungetc",
        "vfprintf",
        "vfscanf",
        "vprintf",
        "vscanf",
        "vsnprintf",
        "vsprintf",
        "vsscanf",
    ],
    "cstdio": [
        "std::FILE",
        "std::clearerr",
        "std::fclose",
        "std::feof",
        "std::ferror",
        "std::fflush",
        "std::fgetc",
        "std::fgetpos",
        "std::fgets",
        "std::fopen",
        "std::fpos_t",
        "std::fprintf",
        "std::fputc",
        "std::fputs",
        "std::fread",
        "std::freopen",
        "std::fscanf",
        "std::fseek",
        "std::fsetpos",
        "std::ftell",
        "std::fwrite",
        "std::getc",
        "std::getchar",
        "std::perror",
        "std::printf",
        "std::putc",
        "std::putchar",
        "std::puts",
        "std::remove",
        "std::rename",
        "std::rewind",
        "std::scanf",
        "std::setbuf",
        "std::setvbuf",
        "std::snprintf",
        "std::sprintf",
        "std::sscanf",
        "std::tmpfile",
        "std::tmpnam",
        "std::ungetc",
        "std::vfprintf",
        "std::vfscanf",
        "std::vprintf",
        "std::vscanf",
        "std::vsnprintf",
        "std::vsprintf",
        "std::vsscanf",
    ],
    "stdlib.h": [
        "EXIT_FAILURE",
        "EXIT_SUCCESS",
        "MB_CUR_MAX",
        "RAND_MAX",
        "_Exit",
        "abort",
        "abs",
        "aligned_alloc",
        "at_quick_exit",
        "atexit",
        "atof",
        "atoi",
        "atol",
        "atoll",
        "bsearch",
        "calloc",
        "div",
        "div_t",
        "exit",
        "free",
        "getenv",
        "labs",
        "ldiv",
        "ldiv_t",
        "llabs",
        "lldiv",
        "lldiv_t",
        "malloc",
        "mblen",
        "mbstowcs",
        "mbtowc",
        "qsort",
        "quick_exit",
        "rand",
        "realloc",
        "srand",
        "strtod",
        "strtof",
        "strtol",
        "strtold",
        "strtoll",
        "strtoul",
        "strtoull",
        "system",
        "wcstombs",
        "wctomb",
        "setenv",
        "unsetenv",
        "putenv",
    ],
    "cstdlib": [
        "std::_Exit",
        "std::abort",
        "std::abs",
        "std::aligned_alloc",
        "std::at_quick_exit",
        "std::atexit",
        "std::atof",
        "std::atoi",
        "std::atol",
        "std::atoll",
        "std::bsearch",
        "std::calloc",
        "std::div",
        "std::div_t",
        "std::exit",
        "std::free",
        "std::getenv",
        "std::labs",
        "std::ldiv",
        "std::ldiv_t",
        "std::llabs",
        "std::lldiv",
        "std::lldiv_t",
        "std::malloc",
        "std::mblen",
        "std::mbstowcs",
        "std::mbtowc",
        "std::qsort",
        "std::quick_exit",
        "std::rand",
        "std::realloc",
        "std::srand",
        "std::strtod",
        "std::strtof",
        "std::strtol",
        "std::strtold",
        "std::strtoll",
        "std::strtoul",
        "std::strtoull",
        "std::system",
        "std::wcstombs",
        "std::wctomb",
    ],
    "string.h": [
        "memchr",
        "memcmp",
        "memcpy",
        "memmove",
        "memset",
        "strcat",
        "strchr",
        "strcmp",
        "strcoll",
        "strcpy",
        "strcspn",
        "strerror",
        "strlen",
        "strncat",
        "strncmp",
        "strncpy",
        "strpbrk",
        "strrchr",
        "strspn",
        "strstr",
        "strtok",
        "strxfrm",
    ],
    "cstring": [
        "std::memchr",
        "std::memcmp",
        "std::memcpy",
        "std::memmove",
        "std::memset",
        "std::strcat",
        "std::strchr",
        "std::strcmp",
        "std::strcoll",
        "std::strcpy",
        "std::strcspn",
        "std::strerror",
        "std::strlen",
        "std::strncat",
        "std::strncmp",
        "std::strncpy",
        "std::strpbrk",
        "std::strrchr",
        "std::strspn",
        "std::strstr",
        "std::strtok",
        "std::strxfrm",
    ],
    "time.h": [
        "CLOCKS_PER_SEC",
        "TIME_UTC",
        "asctime",
        "clock",
        "clock_t",
        "ctime",
        "difftime",
        "gmtime",
        "localtime",
        "mktime",
        "strftime",
        "time",
        "time_t",
        "timespec",
        "timespec_get",
        "tm",
    ],
    "ctime": [
        "std::asctime",
        "std::clock",
        "std::clock_t",
        "std::ctime",
        "std::difftime",
        "std::gmtime",
        "std::localtime",
        "std::mktime",
        "std::strftime",
        "std::time",
        "std::time_t",
        "std::timespec",
        "std::timespec_get",
        "std::tm",
    ],
}


def is_c_header(header: str) -> bool:
    return header.endswith(".h")


def get_cxx_header(c_header: str) -> str:
    return "c" + c_header[:-2]


# C++ headers contain all symbols from the corresponding C headers.
for header in HEADER_2_SYMBOLS.keys():
    if is_c_header(header):
        cxx_header = get_cxx_header(header)
        if cxx_header in HEADER_2_SYMBOLS:
            HEADER_2_SYMBOLS[cxx_header] = HEADER_2_SYMBOLS[header] + HEADER_2_SYMBOLS[cxx_header]
